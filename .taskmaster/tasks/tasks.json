{
  "master": {
    "tasks": [
      {
        "id": 1,
        "title": "Расширение системы пользователей для геолокации",
        "description": "Добавить поддержку геолокации в профиль пользователя",
        "details": "Необходимо расширить модель пользователя для хранения координат (широта, долгота) и добавить API эндпоинты для обновления местоположения пользователя. Также нужно добавить валидацию координат и обработку ошибок геолокации.",
        "status": "pending",
        "priority": "high",
        "dependencies": [],
        "subtasks": [
          {
            "id": 1,
            "title": "Обновить схему базы данных",
            "description": "Добавить поля latitude и longitude в таблицу users",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "Создать API эндпоинт для обновления местоположения",
            "description": "POST /users/location для обновления координат пользователя",
            "status": "pending"
          },
          {
            "id": 3,
            "title": "Добавить валидацию координат",
            "description": "Проверка корректности широты и долготы",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование API эндпоинтов с различными координатами, проверка валидации некорректных данных"
      },
      {
        "id": 2,
        "title": "Создание каталога настольных игр",
        "description": "Разработать систему управления каталогом настольных игр",
        "details": "Создать модель данных для игр, включая название, описание, категории, сложность, количество игроков, время игры. Добавить CRUD операции для управления играми.",
        "status": "pending",
        "priority": "high",
        "dependencies": [],
        "subtasks": [
          {
            "id": 1,
            "title": "Создать таблицу games в базе данных",
            "description": "Схема для хранения информации о настольных играх",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "Реализовать CRUD API для игр",
            "description": "GET, POST, PUT, DELETE эндпоинты для /games",
            "status": "pending"
          },
          {
            "id": 3,
            "title": "Добавить систему категорий игр",
            "description": "Создать таблицу категорий и связи с играми",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование всех CRUD операций, проверка связей между играми и категориями"
      },
      {
        "id": 3,
        "title": "Система предпочтений пользователей",
        "description": "Позволить пользователям указывать любимые игры и жанры",
        "details": "Создать систему для пользователей, чтобы они могли добавлять игры в список предпочтений, оценивать игры, указывать уровень интереса к различным категориям.",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "2"
        ],
        "subtasks": [
          {
            "id": 1,
            "title": "Создать таблицу user_game_preferences",
            "description": "Связь пользователей с играми и их рейтингами",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "API для управления предпочтениями",
            "description": "Эндпоинты для добавления/удаления игр из предпочтений",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование добавления/удаления предпочтений, проверка корректности связей"
      },
      {
        "id": 4,
        "title": "Алгоритм поиска игроков по расстоянию",
        "description": "Реализовать поиск ближайших игроков с учетом расстояния",
        "details": "Создать алгоритм для поиска пользователей в определенном радиусе от текущего местоположения. Использовать формулу гаверсинуса для расчета расстояния между координатами.",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1"
        ],
        "subtasks": [
          {
            "id": 1,
            "title": "Реализовать функцию расчета расстояния",
            "description": "Функция для вычисления расстояния между двумя точками",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "Создать API поиска игроков",
            "description": "GET /users/search с параметрами radius и location",
            "status": "pending"
          },
          {
            "id": 3,
            "title": "Добавить фильтрацию по предпочтениям",
            "description": "Поиск игроков с похожими игровыми предпочтениями",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование с различными координатами и радиусами, проверка производительности"
      },
      {
        "id": 5,
        "title": "Система матчинга игроков",
        "description": "Создать систему для сопоставления игроков в группы",
        "details": "Разработать алгоритм матчинга, который учитывает местоположение, игровые предпочтения, доступность времени. Создать систему предложений матчей и подтверждения участия.",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "3",
          "4"
        ],
        "subtasks": [
          {
            "id": 1,
            "title": "Создать таблицу matches",
            "description": "Схема для хранения информации о матчах",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "Алгоритм предложения матчей",
            "description": "Логика для предложения подходящих игроков",
            "status": "pending"
          },
          {
            "id": 3,
            "title": "API для управления матчами",
            "description": "Эндпоинты для создания, подтверждения, отмены матчей",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование алгоритма матчинга с различными сценариями пользователей"
      },
      {
        "id": 6,
        "title": "Базовая система чатов",
        "description": "Реализовать простую систему обмена сообщениями между игроками",
        "details": "Создать систему для обмена сообщениями между участниками матча. Включить отправку текстовых сообщений, статусы прочтения, историю сообщений.",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "5"
        ],
        "subtasks": [
          {
            "id": 1,
            "title": "Создать таблицу messages",
            "description": "Схема для хранения сообщений чата",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "API для отправки сообщений",
            "description": "POST /matches/{id}/messages для отправки сообщений",
            "status": "pending"
          },
          {
            "id": 3,
            "title": "API для получения истории сообщений",
            "description": "GET /matches/{id}/messages для получения истории",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование отправки и получения сообщений, проверка корректности связей"
      },
      {
        "id": 7,
        "title": "Система планирования встреч",
        "description": "Добавить возможность планирования времени и места встреч",
        "details": "Создать систему для планирования игровых встреч с указанием времени, места, количества участников. Включить календарную функциональность и напоминания.",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "5"
        ],
        "subtasks": [
          {
            "id": 1,
            "title": "Расширить модель matches",
            "description": "Добавить поля для времени и места встречи",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "API для планирования встреч",
            "description": "Эндпоинты для создания и обновления встреч",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование создания встреч, проверка валидации времени и места"
      },
      {
        "id": 8,
        "title": "Система уведомлений",
        "description": "Реализовать уведомления о новых матчах и сообщениях",
        "details": "Создать систему уведомлений для информирования пользователей о новых предложениях матчей, сообщениях, изменениях в встречах.",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "5",
          "6"
        ],
        "subtasks": [
          {
            "id": 1,
            "title": "Создать таблицу notifications",
            "description": "Схема для хранения уведомлений",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "API для уведомлений",
            "description": "GET /notifications для получения уведомлений пользователя",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование создания и получения уведомлений"
      },
      {
        "id": 9,
        "title": "Улучшение системы авторизации",
        "description": "Расширить существующую систему авторизации",
        "details": "Добавить дополнительные поля профиля, аватар пользователя, настройки приватности, восстановление пароля.",
        "status": "pending",
        "priority": "low",
        "dependencies": [],
        "subtasks": [
          {
            "id": 1,
            "title": "Добавить поля профиля",
            "description": "Аватар, описание, настройки приватности",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "API для обновления профиля",
            "description": "PUT /auth/profile для обновления данных профиля",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование обновления профиля, проверка валидации данных"
      },
      {
        "id": 10,
        "title": "Система рейтингов и отзывов",
        "description": "Добавить возможность оценивать игроков после встреч",
        "details": "Создать систему рейтингов для игроков, возможность оставлять отзывы после игровых встреч. Включить средний рейтинг и историю оценок.",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "5"
        ],
        "subtasks": [
          {
            "id": 1,
            "title": "Создать таблицу ratings",
            "description": "Схема для хранения оценок игроков",
            "status": "pending"
          },
          {
            "id": 2,
            "title": "API для рейтингов",
            "description": "POST /users/{id}/rating для оценки игрока",
            "status": "pending"
          }
        ],
        "testStrategy": "Тестирование создания и получения рейтингов"
      }
    ],
    "metadata": {
      "created": "2025-09-30T16:45:46.085Z",
      "updated": "2025-09-30T16:45:46.085Z",
      "description": "Tasks for master context"
    }
  }
}